import { createAsyncThunk, createSlice } from "@reduxjs/toolkit";

const initialState = {
	questions: [],
	isLoading: false,
	errorMsg: "",
};

const API_URL =
	"https://opentdb.com/api.php?amount=10&category=14&difficulty=easy";

export const fetchQuestions = createAsyncThunk("location/fetch", async () => {
	fetch(API_URL)
		.then((res) => res.json())
		.then((data) => data);
});

export const questionSlice = createSlice({
	name: "question",
	initialState,
	// The `reducers` field lets us define reducers and generate associated actions
	reducers: {
		increment: (state) => {
			state.value += 1;
		},
	},
	// The `extraReducers` field lets the slice handle actions defined elsewhere,
	// including actions generated by createAsyncThunk or in other slices.
	extraReducers: (builder) => {
		builder.addCase(fetchQuestions.pending, (state, action) => {
			state.isLoading = true;
		});

		builder.addCase(fetchQuestions.fulfilled, (state, action) => {
			state.isLoading = false;
			state.questions = action.payload;
		});

		builder.addCase(fetchQuestions.rejected, (state, action) => {
			state.errorMsg = action.error.message;
		});
	},
});

export const { increment, decrement, incrementByAmount } =
	questionSlice.actions;

export const selectCount = (state) => state.question.value;

export default questionSlice.reducer;
